package vmess

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	protocol "v2ray.com/core/common/protocol"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Account struct {
	// ID of the account, in the form of a UUID, e.g., "66ad4540-b58c-4ad2-9926-ea63445a9b57".
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Number of alternative IDs. Client and server must share the same number.
	AlterId uint32 `protobuf:"varint,2,opt,name=alter_id,json=alterId,proto3" json:"alter_id,omitempty"`
	// Security settings. Only applies to client side.
	SecuritySettings *protocol.SecurityConfig `protobuf:"bytes,3,opt,name=security_settings,json=securitySettings,proto3" json:"security_settings,omitempty"`
	// Define tests enabled for this account
	TestsEnabled         string   `protobuf:"bytes,4,opt,name=tests_enabled,json=testsEnabled,proto3" json:"tests_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_d65dee31e5abbda0, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetAlterId() uint32 {
	if m != nil {
		return m.AlterId
	}
	return 0
}

func (m *Account) GetSecuritySettings() *protocol.SecurityConfig {
	if m != nil {
		return m.SecuritySettings
	}
	return nil
}

func (m *Account) GetTestsEnabled() string {
	if m != nil {
		return m.TestsEnabled
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "v2ray.core.proxy.vmess.Account")
}

func init() {
	proto.RegisterFile("v2ray.com/core/proxy/vmess/account.proto", fileDescriptor_d65dee31e5abbda0)
}

var fileDescriptor_d65dee31e5abbda0 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x49, 0xfd, 0x31, 0x8d, 0x4e, 0xb4, 0x87, 0x51, 0x77, 0x2a, 0x7a, 0x29, 0x22, 0x09,
	0xd4, 0xbb, 0xa0, 0xc3, 0x83, 0xb7, 0xd1, 0xc1, 0x04, 0x2f, 0x25, 0x4b, 0x9e, 0x33, 0xd0, 0xe4,
	0x8d, 0x24, 0x1b, 0xf6, 0x5f, 0xf2, 0xe8, 0x5f, 0x28, 0x4b, 0x57, 0x10, 0xd9, 0x2d, 0x79, 0xf9,
	0xbc, 0xcf, 0xf7, 0x4b, 0x68, 0xb1, 0x29, 0x9d, 0x68, 0x99, 0x44, 0xc3, 0x25, 0x3a, 0xe0, 0x2b,
	0x87, 0x5f, 0x2d, 0xdf, 0x18, 0xf0, 0x9e, 0x0b, 0x29, 0x71, 0x6d, 0x03, 0x5b, 0x39, 0x0c, 0x98,
	0x8e, 0x7a, 0xd2, 0x01, 0x8b, 0x14, 0x8b, 0xd4, 0xf8, 0xfe, 0x9f, 0x41, 0xa2, 0x31, 0x68, 0x79,
	0x5c, 0x92, 0xd8, 0xf0, 0x4f, 0x10, 0x0a, 0x9c, 0xef, 0x2c, 0x37, 0x3f, 0x84, 0x0e, 0x9e, 0x3a,
	0x6f, 0x7a, 0x41, 0x13, 0xad, 0x32, 0x92, 0x93, 0xe2, 0xb4, 0x4a, 0xb4, 0x4a, 0xaf, 0xe9, 0x89,
	0x68, 0x02, 0xb8, 0x5a, 0xab, 0x2c, 0xc9, 0x49, 0x31, 0xac, 0x06, 0xf1, 0xfe, 0xaa, 0xd2, 0x37,
	0x7a, 0xe5, 0x41, 0xae, 0x9d, 0x0e, 0x6d, 0xed, 0x21, 0x04, 0x6d, 0x97, 0x3e, 0x3b, 0xc8, 0x49,
	0x71, 0x56, 0xde, 0xb1, 0x3f, 0xc5, 0xba, 0x70, 0xd6, 0x87, 0xb3, 0xd9, 0x6e, 0x69, 0x82, 0xf6,
	0x43, 0x2f, 0xab, 0xcb, 0x5e, 0x32, 0xdb, 0x39, 0xd2, 0x5b, 0x3a, 0x0c, 0xe0, 0x83, 0xaf, 0xc1,
	0x8a, 0x45, 0x03, 0x2a, 0x3b, 0x8c, 0x75, 0xce, 0xe3, 0xf0, 0xa5, 0x9b, 0x3d, 0x3f, 0xd2, 0xb1,
	0x44, 0xc3, 0xf6, 0x7f, 0xc0, 0x94, 0xbc, 0x1f, 0xc5, 0xc3, 0x77, 0x32, 0x9a, 0x97, 0x95, 0x68,
	0xd9, 0x64, 0x4b, 0x4c, 0x23, 0x31, 0xdf, 0x3e, 0x2c, 0x8e, 0x63, 0x9f, 0x87, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xfa, 0xc8, 0x2e, 0x50, 0x6d, 0x01, 0x00, 0x00,
}
